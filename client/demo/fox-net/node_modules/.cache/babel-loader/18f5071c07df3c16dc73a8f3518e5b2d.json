{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442 TENSOR\\\\Social_network_1\\\\client\\\\demo\\\\fox-net\\\\src\\\\components\\\\ProfileInfo.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport userPhoto from '../pics/profilePhoto.jpg';\nimport ProfilePopup from '../components/ProfilePopup.js';\nimport MessagePopup from './MessagePopup.js';\nimport { createDialog } from '../actions/dialog.js';\nimport { Link } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport logo from '../pics/foxnetWhite.png';\nimport { getProfile } from '../actions/profile.js';\n\nclass ProfileInfo extends Component {\n  componentDidMount() {\n    this.props.onGetProfile('/get_profile/' + this.props.userId);\n  }\n\n  createDialog() {\n    this.props.onCreateDialog('/dialog_with_him/' + this.props.userId);\n    let length = this.props.dialog.length - 1;\n    console.log(this.props.dialog[length]);\n    let dialog = this.props.dialog[length];\n    let socket = io.connect('http://localhost');\n    let connectMe = {\n      username: this.props.id,\n      room: 555\n    };\n    let connectHim = {\n      username: this.props.userId,\n      room: 555\n    };\n    socket.emit('join', connectMe);\n    socket.emit('join', connectHim);\n  }\n\n  render() {\n    console.log(this.props.id);\n    let photo;\n\n    if (this.props.photo === null) {\n      photo = logo;\n    } else {\n      photo = this.props.photo;\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(ProfilePopup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(MessagePopup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"profileInfoWrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"profileInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: photo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.props.FirstName, \" \", this.props.SecondName), React.createElement(\"div\", {\n      className: \"profileInfoButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.props.onToggleInfPopup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"User information\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Add friend\"), React.createElement(Link, {\n      to: \"/dialogs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.createDialog.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Send message\"))))));\n  }\n\n}\n\nexport default connect(state => ({\n  FirstName: state.profile.FirstName,\n  SecondName: state.profile.SecondName,\n  photo: state.profile.Photo,\n  id: state.header.Id,\n  dialog: state.dialogs\n}), dispatch => ({\n  onCreateDialog: url => {\n    dispatch(createDialog(url));\n  },\n  onGetProfile: url => {\n    dispatch(getProfile(url));\n  },\n  onToggleInfPopup: () => {\n    dispatch({\n      type: 'TOGGLE_PROFILE_POPUP',\n      status: 'flex'\n    });\n  },\n  onToggleMessPopup: () => {\n    dispatch({\n      type: 'TOGGLE_MESSAGE_POPUP',\n      status: 'flex'\n    });\n  }\n}))(ProfileInfo);","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\Проект TENSOR\\Social_network_1\\client\\demo\\fox-net\\src\\components\\ProfileInfo.js"],"names":["React","Component","connect","userPhoto","ProfilePopup","MessagePopup","createDialog","Link","io","logo","getProfile","ProfileInfo","componentDidMount","props","onGetProfile","userId","onCreateDialog","length","dialog","console","log","socket","connectMe","username","id","room","connectHim","emit","render","photo","FirstName","SecondName","onToggleInfPopup","bind","state","profile","Photo","header","Id","dialogs","dispatch","url","type","status","onToggleMessPopup"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport userPhoto from '../pics/profilePhoto.jpg';\r\nimport ProfilePopup from '../components/ProfilePopup.js';\r\nimport MessagePopup from './MessagePopup.js';\r\nimport {createDialog} from '../actions/dialog.js';\r\nimport { Link } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport logo from '../pics/foxnetWhite.png';\r\nimport {getProfile} from '../actions/profile.js';\r\n\r\nclass ProfileInfo extends Component{\r\n  componentDidMount(){\r\n    this.props.onGetProfile('/get_profile/'+this.props.userId)\r\n  }\r\n  createDialog(){\r\n    this.props.onCreateDialog('/dialog_with_him/'+this.props.userId)\r\n    let length = this.props.dialog.length-1\r\n    console.log(this.props.dialog[length]);\r\n    let dialog = this.props.dialog[length]\r\n    let socket = io.connect('http://localhost');\r\n    let connectMe = {\r\n          username: this.props.id,\r\n          room: 555\r\n        }\r\n    let connectHim = {\r\n          username: this.props.userId,\r\n          room: 555\r\n        }\r\n    socket.emit('join', connectMe)\r\n    socket.emit('join', connectHim)\r\n  }\r\n  render(){\r\n    console.log(this.props.id);\r\n    let photo;\r\n    if(this.props.photo === null){\r\n      photo = logo;\r\n    }else{\r\n      photo = this.props.photo;\r\n    }\r\n    return(\r\n      <React.Fragment>\r\n      <ProfilePopup/>\r\n      <MessagePopup/>\r\n      <div className='profileInfoWrap'>\r\n        <div className='profileInfo'>\r\n          <img src={photo} />\r\n          <h3>{this.props.FirstName} {this.props.SecondName}</h3>\r\n          <div className='profileInfoButtons'>\r\n            <button onClick={this.props.onToggleInfPopup}>User information</button>\r\n            <button>Add friend</button>\r\n            <Link to='/dialogs'>\r\n            <button onClick={this.createDialog.bind(this)}>Send message</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    FirstName: state.profile.FirstName,\r\n    SecondName: state.profile.SecondName,\r\n    photo: state.profile.Photo,\r\n    id: state.header.Id,\r\n    dialog: state.dialogs\r\n  }),\r\n  dispatch =>({\r\n    onCreateDialog: (url) =>{\r\n      dispatch(createDialog(url))\r\n    },\r\n    onGetProfile: (url) =>{\r\n      dispatch(getProfile(url))\r\n    },\r\n    onToggleInfPopup: () =>{\r\n      dispatch({type: 'TOGGLE_PROFILE_POPUP', status: 'flex'})\r\n    },\r\n    onToggleMessPopup: () => {\r\n      dispatch({type: 'TOGGLE_MESSAGE_POPUP', status: 'flex'})\r\n    }\r\n  })\r\n)(ProfileInfo)\r\n"]},"metadata":{},"sourceType":"module"}