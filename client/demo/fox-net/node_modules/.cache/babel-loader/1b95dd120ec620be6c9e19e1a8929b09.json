{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442 TENSOR\\\\Social_network_1\\\\client\\\\demo\\\\fox-net\\\\src\\\\components\\\\ProfileInfo.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport userPhoto from '../pics/profilePhoto.jpg';\nimport ProfilePopup from '../components/ProfilePopup.js';\nimport MessagePopup from './MessagePopup.js';\nimport { createDialog } from '../actions/dialog.js';\nimport { Link } from 'react-router-dom';\nimport logo from '../pics/foxnetWhite.png';\nimport { getProfile } from '../actions/profile.js';\n\nclass ProfileInfo extends Component {\n  componentDidMount() {\n    this.props.onGetProfile('/get_profile/' + this.props.userId);\n  }\n\n  createDialog() {\n    this.props.onCreateDialog('/dialog_with_him/' + this.props.id);\n  }\n\n  render() {\n    let photo;\n\n    if (this.props.photo === null) {\n      photo = logo;\n    } else {\n      photo = this.props.photo;\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(ProfilePopup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(MessagePopup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"profileInfoWrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"profileInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: photo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.props.FirstName, \" \", this.props.SecondName), React.createElement(\"div\", {\n      className: \"profileInfoButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.props.onToggleInfPopup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"User information\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Add friend\"), React.createElement(Link, {\n      to: \"/dialogs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Send message\"))))));\n  }\n\n}\n\nexport default connect(state => ({\n  FirstName: state.profile.FirstName,\n  SecondName: state.profile.SecondName,\n  photo: state.profile.Photo,\n  id: state.profile.Id\n}), dispatch => ({\n  onCreateDialog: url => {\n    dispatch(createDialog(url));\n  },\n  onGetProfile: url => {\n    dispatch(getProfile(url));\n  },\n  onToggleInfPopup: () => {\n    dispatch({\n      type: 'TOGGLE_PROFILE_POPUP',\n      status: 'flex'\n    });\n  },\n  onToggleMessPopup: () => {\n    dispatch({\n      type: 'TOGGLE_MESSAGE_POPUP',\n      status: 'flex'\n    });\n  }\n}))(ProfileInfo);","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\Проект TENSOR\\Social_network_1\\client\\demo\\fox-net\\src\\components\\ProfileInfo.js"],"names":["React","Component","connect","userPhoto","ProfilePopup","MessagePopup","createDialog","Link","logo","getProfile","ProfileInfo","componentDidMount","props","onGetProfile","userId","onCreateDialog","id","render","photo","FirstName","SecondName","onToggleInfPopup","state","profile","Photo","Id","dispatch","url","type","status","onToggleMessPopup"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport userPhoto from '../pics/profilePhoto.jpg';\r\nimport ProfilePopup from '../components/ProfilePopup.js';\r\nimport MessagePopup from './MessagePopup.js';\r\nimport {createDialog} from '../actions/dialog.js';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../pics/foxnetWhite.png';\r\nimport {getProfile} from '../actions/profile.js';\r\n\r\nclass ProfileInfo extends Component{\r\n  componentDidMount(){\r\n    this.props.onGetProfile('/get_profile/'+this.props.userId)\r\n  }\r\n  createDialog(){\r\n    this.props.onCreateDialog('/dialog_with_him/'+this.props.id)\r\n  }\r\n  render(){\r\n    let photo;\r\n    if(this.props.photo === null){\r\n      photo = logo;\r\n    }else{\r\n      photo = this.props.photo;\r\n    }\r\n    return(\r\n      <React.Fragment>\r\n      <ProfilePopup/>\r\n      <MessagePopup/>\r\n      <div className='profileInfoWrap'>\r\n        <div className='profileInfo'>\r\n          <img src={photo} />\r\n          <h3>{this.props.FirstName} {this.props.SecondName}</h3>\r\n          <div className='profileInfoButtons'>\r\n            <button onClick={this.props.onToggleInfPopup}>User information</button>\r\n            <button>Add friend</button>\r\n            <Link to='/dialogs'>\r\n            <button>Send message</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    FirstName: state.profile.FirstName,\r\n    SecondName: state.profile.SecondName,\r\n    photo: state.profile.Photo,\r\n    id: state.profile.Id\r\n  }),\r\n  dispatch =>({\r\n    onCreateDialog: (url) =>{\r\n      dispatch(createDialog(url))\r\n    },\r\n    onGetProfile: (url) =>{\r\n      dispatch(getProfile(url))\r\n    },\r\n    onToggleInfPopup: () =>{\r\n      dispatch({type: 'TOGGLE_PROFILE_POPUP', status: 'flex'})\r\n    },\r\n    onToggleMessPopup: () => {\r\n      dispatch({type: 'TOGGLE_MESSAGE_POPUP', status: 'flex'})\r\n    }\r\n  })\r\n)(ProfileInfo)\r\n"]},"metadata":{},"sourceType":"module"}