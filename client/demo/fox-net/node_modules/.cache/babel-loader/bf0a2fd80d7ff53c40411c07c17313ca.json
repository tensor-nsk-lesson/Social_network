{"ast":null,"code":"export function testSuccsess(testFiles) {\n  return {\n    type: 'PERSONS_FETCH_DATA_SUCCESS',\n    testFiles\n  };\n}\nexport function test(url) {\n  return dispatch => {\n    fetch(url).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(response => response.json()).then(testFiles => dispatch(testSuccsess(testFiles)));\n  };\n}\nexport function authorisation(url) {\n  return dispatch => {\n    fetch(url, {\n      method: 'post',\n      body: JSON.stringify({\n        login: 'testing@mail.ru',\n        password: '12345'\n      })\n    });\n  };\n}","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\Проект TENSOR\\Social_network_1\\client\\demo\\fox-net\\src\\actions\\test.js"],"names":["testSuccsess","testFiles","type","test","url","dispatch","fetch","then","response","ok","Error","statusText","json","authorisation","method","body","JSON","stringify","login","password"],"mappings":"AAAA,OAAO,SAASA,YAAT,CAAsBC,SAAtB,EAAgC;AACrC,SAAO;AACLC,IAAAA,IAAI,EAAE,4BADD;AAELD,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASE,IAAT,CAAcC,GAAd,EAAkB;AACvB,SAAQC,QAAD,IAAY;AACjBC,IAAAA,KAAK,CAACF,GAAD,CAAL,CACGG,IADH,CACQC,QAAQ,IAAG;AACf,UAAG,CAACA,QAAQ,CAACC,EAAb,EAAgB;AACd,cAAM,IAAIC,KAAJ,CAAUF,QAAQ,CAACG,UAAnB,CAAN;AACD;;AACD,aAAOH,QAAP;AACD,KANH,EAOGD,IAPH,CAOQC,QAAQ,IAAGA,QAAQ,CAACI,IAAT,EAPnB,EAQGL,IARH,CAQQN,SAAS,IAAII,QAAQ,CAACL,YAAY,CAACC,SAAD,CAAb,CAR7B;AASD,GAVD;AAWD;AAED,OAAO,SAASY,aAAT,CAAuBT,GAAvB,EAA2B;AAChC,SAAQC,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAACF,GAAD,EAAM;AACTU,MAAAA,MAAM,EAAC,MADE;AAETC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,KAAK,EAAE,iBAAR;AAA2BC,QAAAA,QAAQ,EAAE;AAArC,OAAf;AAFG,KAAN,CAAL;AAID,GALD;AAMD","sourcesContent":["export function testSuccsess(testFiles){\r\n  return {\r\n    type: 'PERSONS_FETCH_DATA_SUCCESS',\r\n    testFiles\r\n  }\r\n}\r\n\r\nexport function test(url){\r\n  return (dispatch)=>{\r\n    fetch(url)\r\n      .then(response =>{\r\n        if(!response.ok){\r\n          throw new Error(response.statusText)\r\n        }\r\n        return response;\r\n      })\r\n      .then(response=> response.json())\r\n      .then(testFiles => dispatch(testSuccsess(testFiles)))\r\n  }\r\n}\r\n\r\nexport function authorisation(url){\r\n  return (dispatch) => {\r\n    fetch(url, {\r\n      method:'post',\r\n      body: JSON.stringify({login: 'testing@mail.ru', password: '12345'}) \r\n    })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}