{"ast":null,"code":"export function fetchSuccess(key) {\n  return {\n    type: 'LOGIN_USER_SUCCESS',\n    key\n  };\n}\nexport function authorisation(url, data) {\n  return dispatch => {\n    return fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(response => response.json()).then(data => dispatch(fetchSuccess(data)));\n  };\n}","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\Проект TENSOR\\Social_network_1\\client\\demo\\fox-net\\src\\actions\\authorisation.js"],"names":["fetchSuccess","key","type","authorisation","url","data","dispatch","fetch","method","body","JSON","stringify","headers","Headers","then","response","ok","Error","statusText","json"],"mappings":"AAAA,OAAO,SAASA,YAAT,CAAsBC,GAAtB,EAA0B;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAE,oBADD;AAELD,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASE,aAAT,CAAuBC,GAAvB,EAA4BC,IAA5B,EAAiC;AACtC,SAAQC,QAAD,IAAc;AACnB,WAAOC,KAAK,CAACH,GAAD,EAAM;AAChBI,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAFU;AAGhBO,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,wBAAgB;AADG,OAAZ;AAHO,KAAN,CAAL,CAONC,IAPM,CAODC,QAAQ,IAAG;AACf,UAAG,CAACA,QAAQ,CAACC,EAAb,EAAgB;AACd,cAAM,IAAIC,KAAJ,CAAUF,QAAQ,CAACG,UAAnB,CAAN;AACD;;AACD,aAAOH,QAAP;AACD,KAZM,EAaND,IAbM,CAaDC,QAAQ,IAAIA,QAAQ,CAACI,IAAT,EAbX,EAcNL,IAdM,CAcDT,IAAI,IAAIC,QAAQ,CAACN,YAAY,CAACK,IAAD,CAAb,CAdf,CAAP;AAeD,GAhBD;AAiBD","sourcesContent":["export function fetchSuccess(key){\r\n  return {\r\n    type: 'LOGIN_USER_SUCCESS',\r\n    key\r\n  }\r\n}\r\n\r\nexport function authorisation(url, data){\r\n  return (dispatch) => {\r\n    return fetch(url, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json'\r\n      }),\r\n    })\r\n    .then(response =>{\r\n      if(!response.ok){\r\n        throw new Error(response.statusText)\r\n      }\r\n      return response;\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => dispatch(fetchSuccess(data)))\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}