{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442 TENSOR\\\\Social_network_1\\\\client\\\\demo\\\\fox-net\\\\src\\\\container\\\\Authorisation.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport '../style.css';\nimport logo from '../pics/foxnetBlack.png';\nimport { authorisation } from '../actions/authorisation.js';\nimport { Redirect } from 'react-router';\nimport ScrollReveal from 'scrollreveal';\nimport { withRouter } from 'react-router-dom';\nimport { getProfile } from '../actions/profile.js';\n\nclass Authorisation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      check: 0\n    };\n  }\n\n  componentDidMount() {\n    let slideUp = {\n      distance: '100%',\n      origin: 'top',\n      opacity: 0\n    };\n    ScrollReveal().reveal('.singWrap', slideUp);\n  }\n\n  redirect() {\n    return React.createElement(Redirect, {\n      to: \"/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    });\n  }\n\n  loginUser(e) {\n    e.preventDefault();\n    const data = {\n      login: this.emailInput.value,\n      password: this.passwordInput.value\n    };\n    this.props.onAuth('/auth', data);\n    this.redirect.bind(this);\n  }\n\n  render() {\n    if (this.props.success == 'success') {\n      return React.createElement(Redirect, {\n        to: \"/profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    }\n\n    console.log(this.props.success);\n    return React.createElement(\"div\", {\n      className: \"singWrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"autorisationWrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Login \", this.state.check), React.createElement(\"img\", {\n      src: logo,\n      alt: \"FoxNET\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"login\",\n      className: \"loginData\",\n      placeholder: \"Email\",\n      ref: input => {\n        this.emailInput = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"loginData\",\n      placeholder: \"Password\",\n      ref: input => {\n        this.passwordInput = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"serviceButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      id: \"remember\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"checkbox\",\n      ref: input => {\n        this.rememberInput = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Remember me\")), \" \", React.createElement(\"a\", {\n      href: \"#\",\n      className: \"loginFuncs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Forgot?\")), React.createElement(Link, {\n      to: \"/profile/11\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onClick: this.loginUser.bind(this),\n      className: \"logInput\",\n      type: \"submit\",\n      value: \"LOGIN\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(Link, {\n      to: \"/registration\",\n      className: \"loginFuncs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"I don't have an accaunt\")));\n  }\n\n}\n\nexport default withRouter(connect(state => ({\n  success: state.authorisation\n}), dispatch => ({\n  onAuth: (url, data) => {\n    dispatch(authorisation(url, data));\n  }\n}))(Authorisation));","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\Проект TENSOR\\Social_network_1\\client\\demo\\fox-net\\src\\container\\Authorisation.js"],"names":["React","Component","connect","Link","logo","authorisation","Redirect","ScrollReveal","withRouter","getProfile","Authorisation","constructor","props","state","check","componentDidMount","slideUp","distance","origin","opacity","reveal","redirect","loginUser","e","preventDefault","data","login","emailInput","value","password","passwordInput","onAuth","bind","render","success","console","log","input","rememberInput","dispatch","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,cAAP;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,SAAQC,aAAR,QAA4B,6BAA5B;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,UAAR,QAAyB,uBAAzB;;AAEA,MAAMC,aAAN,SAA4BT,SAA5B,CAAqC;AACnCU,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAb;AACD;;AACDC,EAAAA,iBAAiB,GAAE;AACjB,QAAIC,OAAO,GAAG;AACdC,MAAAA,QAAQ,EAAE,MADI;AAEdC,MAAAA,MAAM,EAAE,KAFM;AAGdC,MAAAA,OAAO,EAAE;AAHK,KAAd;AAKAZ,IAAAA,YAAY,GAAGa,MAAf,CAAsB,WAAtB,EAAmCJ,OAAnC;AACD;;AACDK,EAAAA,QAAQ,GAAE;AACR,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACDC,EAAAA,SAAS,CAACC,CAAD,EAAG;AACVA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAG;AACXC,MAAAA,KAAK,EAAE,KAAKC,UAAL,CAAgBC,KADZ;AAEXC,MAAAA,QAAQ,EAAE,KAAKC,aAAL,CAAmBF;AAFlB,KAAb;AAIA,SAAKhB,KAAL,CAAWmB,MAAX,CAAkB,OAAlB,EAA2BN,IAA3B;AACA,SAAKJ,QAAL,CAAcW,IAAd,CAAmB,IAAnB;AACD;;AACDC,EAAAA,MAAM,GAAE;AACN,QAAI,KAAKrB,KAAL,CAAWsB,OAAX,IAAsB,SAA1B,EAAoC;AAClC,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKxB,KAAL,CAAWsB,OAAvB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAW,KAAKrB,KAAL,CAAWC,KAAtB,CADF,EAEE;AAAK,MAAA,GAAG,EAAEV,IAAV;AAAgB,MAAA,GAAG,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAC,WAA9B;AAA0C,MAAA,WAAW,EAAC,OAAtD;AAA8D,MAAA,GAAG,EAAGiC,KAAD,IAAW;AAAC,aAAKV,UAAL,GAAkBU,KAAlB;AAAwB,OAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAC,WAAjC;AAA6C,MAAA,WAAW,EAAC,UAAzD;AAAoE,MAAA,GAAG,EAAGA,KAAD,IAAW;AAAC,aAAKP,aAAL,GAAqBO,KAArB;AAA2B,OAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC;AAAO,MAAA,EAAE,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqB;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,EAAE,EAAC,UAA1B;AAAqC,MAAA,GAAG,EAAGA,KAAD,IAAW;AAAC,aAAKC,aAAL,GAAqBD,KAArB;AAA2B,OAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,EAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADgC,CAAhC,OAC2B;AAAG,MAAA,IAAI,EAAC,GAAR;AAAY,MAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAD3B,CALJ,EAOI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAE,KAAKf,SAAL,CAAeU,IAAf,CAAoB,IAApB,CAAhB;AAA2C,MAAA,SAAS,EAAC,UAArD;AAAgE,MAAA,IAAI,EAAC,QAArE;AAA8E,MAAA,KAAK,EAAC,OAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPJ,EAUI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,eAAT;AAAyB,MAAA,SAAS,EAAC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAVJ,CADF,CADF;AAgBD;;AA9CkC;;AAgDrC,eAAexB,UAAU,CAACN,OAAO,CAC/BW,KAAK,KAAI;AACPqB,EAAAA,OAAO,EAAErB,KAAK,CAACR;AADR,CAAJ,CAD0B,EAI/BkC,QAAQ,KAAI;AACVR,EAAAA,MAAM,EAAE,CAACS,GAAD,EAAMf,IAAN,KAAc;AACpBc,IAAAA,QAAQ,CAAClC,aAAa,CAACmC,GAAD,EAAMf,IAAN,CAAd,CAAR;AACD;AAHS,CAAJ,CAJuB,CAAP,CASxBf,aATwB,CAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport '../style.css';\r\nimport logo from '../pics/foxnetBlack.png';\r\nimport {authorisation} from '../actions/authorisation.js';\r\nimport { Redirect } from 'react-router';\r\nimport ScrollReveal from 'scrollreveal';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {getProfile} from '../actions/profile.js';\r\n\r\nclass Authorisation extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {check: 0  }\r\n  }\r\n  componentDidMount(){\r\n    let slideUp = {\r\n    distance: '100%',\r\n    origin: 'top',\r\n    opacity: 0\r\n    };\r\n    ScrollReveal().reveal('.singWrap', slideUp);\r\n  }\r\n  redirect(){\r\n    return <Redirect to='/profile'/>\r\n  }\r\n  loginUser(e){\r\n    e.preventDefault();\r\n    const data = {\r\n      login: this.emailInput.value,\r\n      password: this.passwordInput.value\r\n    }\r\n    this.props.onAuth('/auth', data);\r\n    this.redirect.bind(this)\r\n  }\r\n  render(){\r\n    if (this.props.success == 'success'){\r\n      return <Redirect to='/profile'/>\r\n    }\r\n    console.log(this.props.success);\r\n    return(\r\n      <div className=\"singWrap\">\r\n        <form className=\"autorisationWrap\">\r\n          <h1>Login {this.state.check}</h1>\r\n          <img src={logo} alt=\"FoxNET\"/>\r\n            <input type=\"login\" className='loginData' placeholder=\"Email\" ref={(input) => {this.emailInput = input}}/>\r\n            <input type=\"password\" className='loginData' placeholder=\"Password\" ref={(input) => {this.passwordInput = input}}/>\r\n            <div className=\"serviceButtons\"><label id='remember'><input type=\"checkbox\" id='checkbox' ref={(input) => {this.rememberInput = input}}/>\r\n            <p>Remember me</p></label> <a href=\"#\" className='loginFuncs'>Forgot?</a></div>\r\n            <Link to='/profile/11'>\r\n              <input onClick={this.loginUser.bind(this)} className='logInput' type=\"submit\" value='LOGIN'/>\r\n            </Link>\r\n            <Link to=\"/registration\" className='loginFuncs'>I don't have an accaunt</Link>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(connect(\r\n  state =>({\r\n    success: state.authorisation\r\n  }),\r\n  dispatch =>({\r\n    onAuth: (url, data) =>{\r\n      dispatch(authorisation(url, data))\r\n    }\r\n  })\r\n)(Authorisation))\r\n"]},"metadata":{},"sourceType":"module"}