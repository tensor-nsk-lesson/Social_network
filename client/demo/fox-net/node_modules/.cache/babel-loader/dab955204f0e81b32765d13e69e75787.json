{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442 TENSOR\\\\Social_network_1\\\\client\\\\demo\\\\fox-net\\\\src\\\\components\\\\Authorisation.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../style.css';\nimport logo from '../pics/foxnet.png';\nimport Input from '../container/input.js';\n\nclass Authorisation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  loginUser(e) {\n    e.preventDefault();\n    const data = {\n      email: this.emailInput.value,\n      password: this.passwordInput.value,\n      remember: this.rememberInput.checked\n    };\n    this.props.onLoginUser(data);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"singWrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"autorisationWrap\",\n      onSubmit: this.loginUser.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"img\", {\n      src: logo,\n      alt: \"FoxNET\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Input, {\n      type: \"login\",\n      className: \"loginData\",\n      refs: \"{(input) => {this.emailInput= input}}\",\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"loginData\",\n      placeholder: \"Password\",\n      ref: input => {\n        this.passwordInput = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"serviceButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      id: \"remember\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"checkbox\",\n      ref: input => {\n        this.rememberInput = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Remember me\")), \" \", React.createElement(\"a\", {\n      href: \"#\",\n      className: \"loginFuncs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Forgot?\")), React.createElement(\"input\", {\n      className: \"logInput\",\n      type: \"submit\",\n      value: \"LOGIN\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"#\",\n      className: \"loginFuncs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"I don't have an accaunt\")));\n  }\n\n}\n\nexport default connect(state => ({\n  userData: state.userData\n}), dispatch => ({\n  onLoginUser: data => {\n    dispatch({\n      type: 'LOGIN_USER',\n      data: data\n    });\n  }\n}))(Authorisation);","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\Проект TENSOR\\Social_network_1\\client\\demo\\fox-net\\src\\components\\Authorisation.js"],"names":["React","Component","connect","logo","Input","Authorisation","constructor","props","state","loginUser","e","preventDefault","data","email","emailInput","value","password","passwordInput","remember","rememberInput","checked","onLoginUser","render","bind","input","userData","dispatch","type"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport '../style.css'\r\nimport logo from '../pics/foxnet.png'\r\nimport Input from '../container/input.js'\r\n\r\nclass Authorisation extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  loginUser(e){\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.emailInput.value,\r\n      password: this.passwordInput.value,\r\n      remember: this.rememberInput.checked\r\n    }\r\n    this.props.onLoginUser(data);\r\n  }\r\n  render(){\r\n    return(\r\n      <div className=\"singWrap\">\r\n        <form className=\"autorisationWrap\" onSubmit={this.loginUser.bind(this)}>\r\n          <h1>Login</h1>\r\n          <img src={logo} alt=\"FoxNET\"/>\r\n            <Input type='login' className='loginData' refs='{(input) => {this.emailInput= input}}' placeholder='Email'/>\r\n            <input type=\"password\" className='loginData' placeholder=\"Password\" ref={(input) => {this.passwordInput = input}}/>\r\n            <div className=\"serviceButtons\"><label id='remember'><input type=\"checkbox\" id='checkbox' ref={(input) => {this.rememberInput = input}}/>\r\n            <p>Remember me</p></label> <a href=\"#\" className='loginFuncs'>Forgot?</a></div>\r\n            <input className='logInput' type=\"submit\" value='LOGIN'/>\r\n            <a href=\"#\" className='loginFuncs'>I don't have an accaunt</a>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default connect(\r\n  state =>({\r\n    userData: state.userData\r\n  }),\r\n  dispatch =>({\r\n    onLoginUser: (data) =>{\r\n      dispatch({type: 'LOGIN_USER', data: data})\r\n    }\r\n  })\r\n)(Authorisation)\r\n"]},"metadata":{},"sourceType":"module"}