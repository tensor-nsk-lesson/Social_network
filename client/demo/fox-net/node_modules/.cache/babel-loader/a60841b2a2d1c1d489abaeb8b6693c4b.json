{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442 TENSOR\\\\Social_network_1\\\\client\\\\demo\\\\fox-net\\\\src\\\\components\\\\Registration.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport '../style.css';\nimport months from '../constants/months.js';\nimport days from '../constants/days.js';\nimport years from '../constants/years.js';\nimport { registration } from '../actions/registration.js';\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: days,\n      months: months,\n      years: years\n    };\n  }\n\n  submitRegData(e) {\n    e.preventDefault();\n\n    if (this.passwordInput.value === this.checkPasswordInput.value) {\n      const userData = {\n        first_name: this.nameInput.value,\n        login: this.secondnameInput.value,\n        date: this.dayInput.value + '.' + this.monthInput.value + '.' + this.yearInput.value,\n        password: this.passwordInput.value\n      };\n      this.props.onReg('/register', userData);\n    } else {\n      console.log(\"Passwords aren't the same\");\n    }\n  }\n\n  render() {\n    let listDays = this.state.days.map((item, key) => {\n      return React.createElement(\"option\", {\n        value: item,\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, item);\n    });\n    let listMonth = this.state.months.map((item, key) => {\n      return React.createElement(\"option\", {\n        value: item,\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, item);\n    });\n    let listYears = this.state.years.map((item, key) => {\n      return React.createElement(\"option\", {\n        value: item,\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, item);\n    });\n\n    if (this.props.success == 'success') {\n      return React.createElement(Redirect, {\n        to: \"/auth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"singWrap\",\n      onSubmit: this.submitRegData.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"autorisationWrap registr\",\n      action: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Registration\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"loginData\",\n      placeholder: \"Firstname\",\n      ref: input => {\n        this.nameInput = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"email\",\n      className: \"loginData\",\n      placeholder: \"Email\",\n      ref: input => {\n        this.secondnameInput = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"loginData selectDateWrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"selectDate\",\n      name: \"\",\n      ref: input => {\n        this.dayInput = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, listDays), React.createElement(\"select\", {\n      className: \"selectDate\",\n      name: \"\",\n      ref: input => {\n        this.monthInput = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, listMonth), React.createElement(\"select\", {\n      className: \"selectDate\",\n      name: \"\",\n      ref: input => {\n        this.yearInput = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, listYears)), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"loginData\",\n      placeholder: \"Password\",\n      ref: input => {\n        this.passwordInput = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"loginData\",\n      placeholder: \"Password again\",\n      ref: input => {\n        this.checkPasswordInput = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"logInput regInput\",\n      value: \"REGISTRATE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(state => ({\n  success: state.registration.success\n}), dispatch => ({\n  onReg: (url, data) => {\n    dispatch(registration(url, data));\n  }\n}))(Registration);","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\Проект TENSOR\\Social_network_1\\client\\demo\\fox-net\\src\\components\\Registration.js"],"names":["React","Component","connect","Link","months","days","years","registration","Registration","constructor","props","state","submitRegData","e","preventDefault","passwordInput","value","checkPasswordInput","userData","first_name","nameInput","login","secondnameInput","date","dayInput","monthInput","yearInput","password","onReg","console","log","render","listDays","map","item","key","listMonth","listYears","success","bind","input","dispatch","url","data"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport '../style.css'\r\nimport months from '../constants/months.js'\r\nimport days from '../constants/days.js'\r\nimport years from '../constants/years.js'\r\nimport {registration} from '../actions/registration.js'\r\n\r\nclass Registration extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      days: days,\r\n      months: months,\r\n      years: years\r\n    };\r\n  }\r\n  submitRegData(e){\r\n    e.preventDefault();\r\n    if (this.passwordInput.value === this.checkPasswordInput.value){\r\n      const userData ={\r\n        first_name: this.nameInput.value,\r\n        login: this.secondnameInput.value,\r\n        date: this.dayInput.value + '.' + this.monthInput.value + '.' + this.yearInput.value,\r\n        password: this.passwordInput.value\r\n      }\r\n      this.props.onReg('/register', userData);\r\n  }else{\r\n    console.log(\"Passwords aren't the same\")\r\n  }\r\n  }\r\n  render(){\r\n    let listDays = this.state.days.map((item, key) =>{\r\n      return <option value={item} key={key}>{item}</option>\r\n    })\r\n    let listMonth = this.state.months.map((item,key) =>{\r\n      return <option value={item} key={key}>{item}</option>\r\n    })\r\n    let listYears = this.state.years.map((item,key) =>{\r\n      return <option value={item} key={key}>{item}</option>\r\n    })\r\n    if (this.props.success == 'success'){\r\n      return <Redirect to='/auth'/>\r\n    }\r\n    return (\r\n      <div className=\"singWrap\" onSubmit={this.submitRegData.bind(this)}>\r\n        <form className='autorisationWrap registr' action=\"\">\r\n            <h1>Registration</h1>\r\n            <input type=\"text\" className=\"loginData\" placeholder=\"Firstname\" ref={(input) => {this.nameInput = input}} />\r\n            <input type=\"email\" className=\"loginData\" placeholder=\"Email\" ref={(input) => {this.secondnameInput = input}} />\r\n            <div className=\"loginData selectDateWrap\">\r\n              <select className=\"selectDate\" name=\"\" ref={(input) => {this.dayInput = input}}>\r\n                {listDays}\r\n              </select>\r\n              <select className=\"selectDate\" name=\"\" ref={(input) => {this.monthInput = input}}>\r\n                {listMonth}\r\n              </select>\r\n              <select className=\"selectDate\" name=\"\" ref={(input) => {this.yearInput = input}}>\r\n                {listYears}\r\n              </select>\r\n            </div>\r\n            <input type=\"password\" className=\"loginData\" placeholder=\"Password\" ref={(input) => {this.passwordInput = input}}/>\r\n            <input type=\"password\" className=\"loginData\" placeholder=\"Password again\" ref={(input) => {this.checkPasswordInput = input}}/>\r\n              <input type=\"submit\" className='logInput regInput' value='REGISTRATE'/>\r\n\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    success: state.registration.success\r\n  }),\r\n  dispatch => ({\r\n    onReg: (url, data) =>{\r\n      dispatch(registration(url, data))\r\n    }\r\n  })\r\n)(Registration);\r\n"]},"metadata":{},"sourceType":"module"}