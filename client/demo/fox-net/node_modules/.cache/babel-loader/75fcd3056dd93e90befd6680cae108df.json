{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442 TENSOR\\\\Social_network_1\\\\client\\\\demo\\\\fox-net\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './App';\nconst initialState = ['SLTS', 'ARRR'];\n\nfunction playList(initialState, action) {\n  if (action.type === 'ADD_TRACK') {\n    return [...state, action.playload];\n  }\n\n  return state;\n}\n\nconst store = createStore(playList);\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n})), document.getElementById('root')); // import {createStore} from 'redux';\n//\n//\n// const store = createStore(playList);\n//\n// store.subscribe(() =>{\n//   console.log('subscribe', store.getState());\n//   const list = document.querySelector('.list');\n//   list.innerHTML = '';\n//   document.querySelector('.trackInput').value = '';\n//   store.getState().forEach(track =>{\n//     const li = document.createElement('li');\n//     li.textContent = track;\n//     list.appendChild(li)\n//   })\n// })\n//\n//\n// const addTrackButton = document.querySelectorAll('.addTrack')[0];\n// addTrackButton.addEventListener('click', ()=>{\n//   const trackName = document.querySelectorAll('.trackInput')[0].value;\n//   console.log(trackName);\n//   store.dispatch({'type': 'ADD_TRACK', 'playload': trackName})\n// })","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\Проект TENSOR\\Social_network_1\\client\\demo\\fox-net\\src\\index.js"],"names":["React","ReactDOM","Provider","createStore","App","initialState","playList","action","type","state","playload","store","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAGA,MAAMC,YAAY,GAAE,CAClB,MADkB,EAElB,MAFkB,CAApB;;AAIA,SAASC,QAAT,CAAkBD,YAAlB,EAAgCE,MAAhC,EAAwC;AACtC,MAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAgC;AAC9B,WAAM,CACJ,GAAGC,KADC,EAEJF,MAAM,CAACG,QAFH,CAAN;AAID;;AACD,SAAOD,KAAP;AACD;;AACD,MAAME,KAAK,GAAGR,WAAW,CAACG,QAAD,CAAzB;AAEAL,QAAQ,CAACW,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAID,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAQA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore} from 'redux';\r\nimport App from './App';\r\n\r\n\r\nconst initialState= [\r\n  'SLTS',\r\n  'ARRR'\r\n]\r\nfunction playList(initialState, action) {\r\n  if (action.type === 'ADD_TRACK'){\r\n    return[\r\n      ...state,\r\n      action.playload\r\n    ];\r\n  }\r\n  return state;\r\n}\r\nconst store = createStore(playList)\r\n\r\nReactDOM.render(\r\n  <Provider store = {store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n\r\n// import {createStore} from 'redux';\r\n//\r\n\r\n//\r\n// const store = createStore(playList);\r\n//\r\n// store.subscribe(() =>{\r\n//   console.log('subscribe', store.getState());\r\n//   const list = document.querySelector('.list');\r\n//   list.innerHTML = '';\r\n//   document.querySelector('.trackInput').value = '';\r\n//   store.getState().forEach(track =>{\r\n//     const li = document.createElement('li');\r\n//     li.textContent = track;\r\n//     list.appendChild(li)\r\n//   })\r\n// })\r\n//\r\n//\r\n// const addTrackButton = document.querySelectorAll('.addTrack')[0];\r\n// addTrackButton.addEventListener('click', ()=>{\r\n//   const trackName = document.querySelectorAll('.trackInput')[0].value;\r\n//   console.log(trackName);\r\n//   store.dispatch({'type': 'ADD_TRACK', 'playload': trackName})\r\n// })\r\n"]},"metadata":{},"sourceType":"module"}