{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442 TENSOR\\\\Social_network_1\\\\client\\\\demo\\\\fox-net\\\\src\\\\container\\\\Registration.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport '../style.css';\nimport { listMonths } from '../constants/date.js';\nimport { listDays } from '../constants/date.js';\nimport { listYears } from '../constants/date.js';\nimport { registration } from '../actions/registration.js';\nimport { Redirect } from 'react-router';\nimport ScrollReveal from 'scrollreveal';\n\nclass Registration extends Component {\n  componentDidMount() {\n    let slideUp = {\n      distance: '100%',\n      origin: 'top',\n      opacity: 0\n    };\n    ScrollReveal().reveal('.singWrap', slideUp);\n  }\n\n  submitRegData(e) {\n    let now = new Date();\n    let date = now.getDate() + '.' + now.getMonth() + '.' + now.getFullYear() + ' ' + now.getHours() + ':' + now.getMinutes() + ':' + now.getSeconds();\n    e.preventDefault();\n\n    if (this.passwordInput.value === this.checkPasswordInput.value) {\n      const userData = {\n        first_name: this.nameInput.value,\n        login: this.secondnameInput.value,\n        date: this.dayInput.value + '.' + this.monthInput.value + '.' + this.yearInput.value,\n        password: this.passwordInput.value,\n        time: date\n      };\n      this.props.onReg('/register', userData);\n    } else {\n      this.props.onError();\n    }\n  }\n\n  render() {\n    if (this.props.success == 'success') {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"singWrap\",\n      onSubmit: this.submitRegData.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"autorisationWrap registr\",\n      action: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Registration\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"loginData\",\n      placeholder: \"Firstname\",\n      maxLength: \"15\",\n      ref: input => {\n        this.nameInput = input;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"email\",\n      className: \"loginData\",\n      placeholder: \"Email\",\n      maxLength: \"20\",\n      ref: input => {\n        this.secondnameInput = input;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"loginData selectDateWrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"selectDate\",\n      name: \"\",\n      ref: input => {\n        this.dayInput = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, listDays), React.createElement(\"select\", {\n      className: \"selectDate\",\n      name: \"\",\n      ref: input => {\n        this.monthInput = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, listMonths), React.createElement(\"select\", {\n      className: \"selectDate\",\n      name: \"\",\n      ref: input => {\n        this.yearInput = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, listYears)), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"loginData\",\n      placeholder: \"Password\",\n      maxLength: \"20\",\n      ref: input => {\n        this.passwordInput = input;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"loginData\",\n      placeholder: \"Password again\",\n      maxLength: \"20\",\n      ref: input => {\n        this.checkPasswordInput = input;\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      id: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.props.passError), React.createElement(\"p\", {\n      id: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.props.logError), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"logInput regInput\",\n      value: \"REGISTRATE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(state => ({\n  success: state.registration.success,\n  logError: state.registration.error,\n  passError: state.registration.passError\n}), dispatch => ({\n  onReg: (url, data) => {\n    dispatch(registration(url, data));\n  },\n  onError: () => {\n    dispatch({\n      type: 'WRONG_DATA_REGISTRATION',\n      text: \"Passwords aren't the same\"\n    });\n  }\n}))(Registration);","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\Проект TENSOR\\Social_network_1\\client\\demo\\fox-net\\src\\container\\Registration.js"],"names":["React","Component","connect","Link","listMonths","listDays","listYears","registration","Redirect","ScrollReveal","Registration","componentDidMount","slideUp","distance","origin","opacity","reveal","submitRegData","e","now","Date","date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","preventDefault","passwordInput","value","checkPasswordInput","userData","first_name","nameInput","login","secondnameInput","dayInput","monthInput","yearInput","password","time","props","onReg","onError","render","success","bind","input","passError","logError","state","error","dispatch","url","data","type","text"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport '../style.css';\r\nimport {listMonths} from '../constants/date.js';\r\nimport {listDays} from '../constants/date.js';\r\nimport {listYears} from '../constants/date.js';\r\nimport {registration} from '../actions/registration.js';\r\nimport { Redirect } from 'react-router';\r\nimport ScrollReveal from 'scrollreveal';\r\n\r\nclass Registration extends Component{\r\n  componentDidMount(){\r\n    let slideUp = {\r\n    distance: '100%',\r\n    origin: 'top',\r\n    opacity: 0\r\n  };\r\n    ScrollReveal().reveal('.singWrap', slideUp);\r\n  }\r\n  submitRegData(e){\r\n    let now = new Date()\r\n    let date = now.getDate() + '.' +\r\n      now.getMonth() + '.' +\r\n      now.getFullYear() + ' ' +\r\n      now.getHours() + ':' +\r\n      now.getMinutes() + ':' +\r\n      now.getSeconds();\r\n    e.preventDefault();\r\n    if (this.passwordInput.value === this.checkPasswordInput.value){\r\n      const userData ={\r\n        first_name: this.nameInput.value,\r\n        login: this.secondnameInput.value,\r\n        date: this.dayInput.value + '.' + this.monthInput.value + '.' + this.yearInput.value,\r\n        password: this.passwordInput.value,\r\n        time: date\r\n      }\r\n      this.props.onReg('/register', userData);\r\n  }else{\r\n    this.props.onError();\r\n  }\r\n  }\r\n  render(){\r\n    if (this.props.success == 'success'){\r\n      return <Redirect to='/'/>\r\n    }\r\n    return (\r\n      <div className=\"singWrap\" onSubmit={this.submitRegData.bind(this)}>\r\n        <form className='autorisationWrap registr' action=\"\">\r\n            <h1>Registration</h1>\r\n            <input type=\"text\" className=\"loginData\" placeholder=\"Firstname\" maxLength='15' ref={(input) => {this.nameInput = input}} required/>\r\n            <input type=\"email\" className=\"loginData\" placeholder=\"Email\" maxLength='20' ref={(input) => {this.secondnameInput = input}} required/>\r\n            <div className=\"loginData selectDateWrap\">\r\n              <select className=\"selectDate\" name=\"\" ref={(input) => {this.dayInput = input}}>\r\n                {listDays}\r\n              </select>\r\n              <select className=\"selectDate\" name=\"\" ref={(input) => {this.monthInput = input}}>\r\n                {listMonths}\r\n              </select>\r\n              <select className=\"selectDate\" name=\"\" ref={(input) => {this.yearInput = input}}>\r\n                {listYears}\r\n              </select>\r\n            </div>\r\n            <input type=\"password\" className=\"loginData\" placeholder=\"Password\" maxLength='20' ref={(input) => {this.passwordInput = input}}required/>\r\n            <input type=\"password\" className=\"loginData\" placeholder=\"Password again\" maxLength='20' ref={(input) => {this.checkPasswordInput = input}}required/>\r\n            <p id=\"error\">{this.props.passError}</p>\r\n            <p id=\"error\">{this.props.logError}</p>\r\n              <input type=\"submit\" className='logInput regInput' value='REGISTRATE'/>\r\n\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    success: state.registration.success,\r\n    logError: state.registration.error,\r\n    passError: state.registration.passError\r\n  }),\r\n  dispatch => ({\r\n    onReg: (url, data) =>{\r\n      dispatch(registration(url, data))\r\n    },\r\n    onError: () =>{\r\n      dispatch({type: 'WRONG_DATA_REGISTRATION', text: \"Passwords aren't the same\"})\r\n    }\r\n  })\r\n)(Registration);\r\n"]},"metadata":{},"sourceType":"module"}