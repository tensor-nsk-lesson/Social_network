{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442 TENSOR\\\\Social_network_1\\\\client\\\\demo\\\\fox-net\\\\src\\\\components\\\\DialogList.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport DialogElList from '../container/DialogElList.js';\nimport { createDialog } from '../actions/dialog.js';\nimport { addInDialog } from '../actions/addInDialog.js';\nimport io from 'socket.io-client';\nimport { getDialogs } from '../actions/dialogs.js';\n\nclass DialogList extends Component {\n  componentDidMount() {\n    this.props.onGetDialogs(\"/dialogs/\");\n  }\n\n  createDialog() {\n    let socket = io.connect('http://localhost');\n    this.props.onCreateDialog('/dialog/');\n    let postData = {\n      username: '1',\n      room: '10357'\n    };\n    socket.emit('join', postData);\n  }\n\n  createDialog2() {\n    let socket = io.connect('http://localhost');\n    let data = {\n      id_user: '2',\n      id_dialog: '71233'\n    };\n    this.props.onAddInDialog('/add_in_dialog', data);\n    let postData = {\n      username: '2',\n      room: '10357'\n    };\n    socket.emit('join', postData);\n  }\n\n  render() {\n    let dialogList = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Loading\");\n\n    if (this.props.dialogs[0] != undefined) {\n      dialogList = this.props.dialogs.map((item, index) => {\n        return React.createElement(DialogElList, {\n          key: index,\n          dialog: item.NameDialog,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      });\n    } else {\n      dialogList = React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"You have not got dialogs yet\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"dialogList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, dialogList, React.createElement(\"button\", {\n      onClick: this.createDialog.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"), React.createElement(\"button\", {\n      onClick: this.createDialog2.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0442\\u044C\"));\n  }\n\n}\n\nexport default connect(state => ({\n  dialogs: state.dialogs,\n  dialogId: state.dialogs,\n  dialogsAmount: state.dialogs\n}), dispatch => ({\n  onCreateDialog: url => {\n    dispatch(createDialog(url));\n  },\n  onAddInDialog: (url, data) => {\n    dispatch(addInDialog(url, data));\n  },\n  onGetDialogs: url => {\n    dispatch(getDialogs(url));\n  }\n}))(DialogList);","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\Проект TENSOR\\Social_network_1\\client\\demo\\fox-net\\src\\components\\DialogList.js"],"names":["React","Component","connect","DialogElList","createDialog","addInDialog","io","getDialogs","DialogList","componentDidMount","props","onGetDialogs","socket","onCreateDialog","postData","username","room","emit","createDialog2","data","id_user","id_dialog","onAddInDialog","render","dialogList","dialogs","undefined","map","item","index","NameDialog","bind","state","dialogId","dialogsAmount","dispatch","url"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport DialogElList from '../container/DialogElList.js';\r\nimport {createDialog} from '../actions/dialog.js';\r\nimport {addInDialog} from '../actions/addInDialog.js';\r\nimport io from 'socket.io-client';\r\nimport {getDialogs} from '../actions/dialogs.js';\r\n\r\nclass DialogList extends Component{\r\n  componentDidMount(){\r\n    this.props.onGetDialogs(\"/dialogs/\");\r\n  }\r\n  createDialog(){\r\n    let socket = io.connect('http://localhost');\r\n    this.props.onCreateDialog('/dialog/');\r\n    let postData = {\r\n          username: '1',\r\n          room: '10357'\r\n        }\r\n    socket.emit('join', postData)\r\n  }\r\n  createDialog2(){\r\n    let socket = io.connect('http://localhost');\r\n    let data = {id_user: '2', id_dialog: '71233'}\r\n    this.props.onAddInDialog('/add_in_dialog', data);\r\n    let postData = {\r\n          username: '2',\r\n          room: '10357'\r\n        }\r\n    socket.emit('join', postData)\r\n  }\r\n  render(){\r\n      let dialogList = <p>Loading</p>;\r\n      if(this.props.dialogs[0] != undefined){\r\n        dialogList = this.props.dialogs.map((item, index) =>{\r\n          return <DialogElList key={index} dialog={item.NameDialog}/>\r\n        });\r\n      }else{\r\n        dialogList = <h3>You have not got dialogs yet</h3>\r\n      }\r\n    return(\r\n      <div className=\"dialogList\">\r\n        {dialogList}\r\n        <button onClick={this.createDialog.bind(this)}>Создать</button>\r\n        <button onClick={this.createDialog2.bind(this)}>Добавть</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state =>({\r\n    dialogs: state.dialogs,\r\n    dialogId: state.dialogs,\r\n    dialogsAmount: state.dialogs\r\n  }),\r\n  dispatch =>({\r\n    onCreateDialog: (url) =>{\r\n      dispatch(createDialog(url));\r\n    },\r\n    onAddInDialog: (url, data) =>{\r\n      dispatch(addInDialog(url,data));\r\n    },\r\n    onGetDialogs: (url) =>{\r\n      dispatch(getDialogs(url))\r\n    }\r\n  })\r\n)(DialogList)\r\n"]},"metadata":{},"sourceType":"module"}